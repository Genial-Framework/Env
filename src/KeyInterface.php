<?php
/**
 * Genial Framework.
 *
 * @author    Nicholas English <https://github.com/Nenglish7>
 * @author    Genial Contributors <https://github.com/orgs/Genial-Framework/people>
 *
 * @link      <https://github.com/Genial-Framework/Env> for the canonical source repository.
 * @copyright Copyright (c) 2017-2018 Genial Framework. <https://github.com/Genial-Framework>
 * @license   <https://github.com/Genial-Framework/Env/blob/master/LICENSE> New BSD License.
 */

namespace Genial\Env;

/**
 * KeyInterface.
 */
interface KeyInterface
{
    
    /**
     * generateKey().
     *
     * Generate a secret key for Genial Framework
     *
     * @param int|20 $keyLength     The key length.
     * @param string|null $keyspace The characters that should be used in generation.
     *
     * @throws LengthException If the request variables are too long or too short.
     *
     * @return string The generated key.
     */
    public function generateKey($keyLength = 20, $keySpace = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*()_-+=<>,.{}[]|\;:?/`~');
    
    /**
     * generateRandomString().
     *
     * Generate a random string
     *
     * @param int|20 $keyLength     The string length.
     * @param string|null $keyspace The characters that should be used in generation.
     *
     * @return string The generated key.
     */
    public function generateRandomString($stringLength = 20, $keySpace = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*()_-+=<>,.{}[]|\;:?/`~');
    
    /**
     * generateRandomInt().
     *
     * Generate a random integer.
     *
     * @param int $min The min length for the integer.
     * @param int $max The max length for the integer.
     *
     * @return string The generated integer.
     */
    public function generateRandomInt(int $min, int $max);
    
    /**
     * generateRandomBool().
     *
     * Generate a random boolean.
     *
     * @return string The generated boolean.
     */
    public function generateRandomBool();
    
    /**
     * generateRandomBytes().
     *
     * Generate random bytes.
     *
     * @param int $legnth The bytes length.
     *
     * @return string The generated bytes.
     */
    public function generateRandomBytes($length);
     
}

